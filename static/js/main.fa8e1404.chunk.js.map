{"version":3,"sources":["components/Calculator.js","components/ResultScreen.js","components/ComputationScreen.js","components/Screen.js","components/KeypadRow.js","components/Button.js","components/Keypad.js","App.js","index.js"],"names":["Calculator","state","equation","result","enterListener","event","preventDefault","eval","console","log","setState","forceUpdate","onChangeHandler","target","value","onButtonPress","pressedButton","innerHTML","clear","indexOf","evalResult","Number","isInteger","toFixed","error","alert","trim","substr","length","this","className","React","Component","ResultScreen","props","children","ComputationScreen","onSubmit","type","onChange","Screen","KeypadRow","Button","classes","undefined","push","join","onClick","Keypad","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fa8e1404.chunk.js","sourcesContent":["import React from 'react'; \n// import the components\nimport Screen from './Screen'; \nimport Keypad from './Keypad'; \n\nclass Calculator extends React.Component {\n    state = {\n        equation: '',\n        result: 0\n    }\n\n    enterListener = event =>{\n        event.preventDefault(); \n        const result = eval(this.state.equation);\n        console.log(this.enterListener)\n        this.setState({result});\n        this.forceUpdate(); \n    }\n\n    onChangeHandler = event => {\n        event.preventDefault(); \n        this.setState({equation : event.target.value}); \n        this.forceUpdate(); \n    }\n\n    onButtonPress = event =>{\n        let equation = this.state.equation;\n        const pressedButton = event.target.innerHTML;\n\n        if (pressedButton === 'C') \n            return this.clear();\n\n        else if ((pressedButton >= '0' && pressedButton <= '9')\n            || pressedButton === '.'){ \n            equation += pressedButton;\n            console.log(equation);} \n\n        else if (['+', '-', '*', '/', '%'].indexOf(pressedButton) !== -1){\n            equation += ' ' + pressedButton + ' '; \n            console.log(equation);} \n\n        else if (pressedButton === '=') {\n            try{\n                const evalResult = eval(equation);\n                const result = Number.isInteger(evalResult) ? \n                evalResult : evalResult.toFixed(2);\n                this.setState({result});\n            } catch (error) {\n                alert('Invalid Mathematical Equation...'); \n            }\n        } \n        else {\n            equation = equation.trim();\n            equation = equation.substr(0, equation.length - 1); //for the leftArrow button\n        }\n        this.setState({equation: equation}); \n    }\n\n    clear() {\n        this.setState({equation: '', result: 0}); \n    }\n\n    render() {\n        return(\n            <main className=\"calculator\">\n                <Screen\n                    enterListener={this.enterListener}\n                    onChangeHandler={this.onChangeHandler} \n                    equation={this.state.equation} \n                    result={this.state.result}/>\n                <Keypad onButtonPress={this.onButtonPress}/>\n            </main>\n        );\n    }\n}\n\nexport default Calculator; \n\n","// ***   ResultScreen.js   ***\n\nimport React from 'react'; \n\nconst ResultScreen = (props) => (\n    <div className=\"result-screen\">\n        {props.children}\n    </div>\n); \n\nexport default ResultScreen; ","// ***   ComputationScreen.js   ***\n\nimport React from 'react'; \n\nconst ComputationScreen = (props) => (\n    <form onSubmit={props.enterListener}>\n        <input \n            type=\"text\" \n            value={props.children} \n            onChange={props.onChangeHandler} \n            className=\"computation-screen\">\n        </input>\n        <input type=\"submit\"></input>\n    </form>\n);\n\nexport default ComputationScreen; ","// ***   Screen.js    ***\n\nimport React from 'react'; \n\nimport ResultScreen from './ResultScreen'; \nimport ComputationScreen from './ComputationScreen'; \n\nconst Screen = (props) => (\n    <section className=\"screen\">\n        <ResultScreen>{props.result}</ResultScreen>\n        <ComputationScreen\n            enterListener={props.enterListener} \n            onChangeHandler={props.onChangeHandler} >\n            {props.equation}\n        </ComputationScreen>\n    </section>\n);\n\nexport default Screen; ","// ***   KeypadRow.js   ***\n\nimport React from 'react'; \n\n//Note: Each React component has props (empty object in most cases) but are \n//updated behind the scenes when we pass properties. Individual properties can \n//be accessed via props.<name_of_property> while nested components are accessed \n//via props.children property access expression.\n\nconst KeypadRow = (props) => (\n    <div className=\"keypad_row\">\n        {props.children}\n    </div>\n);\n\nexport default KeypadRow; ","// ***   Button.js   ***\n\nimport React from 'react'; \nimport { type } from 'os';\n\nconst Button = (props) => {\n    const classes = ['btn'];\n\n    if (typeof props !== 'undefined' && typeof props.type !== undefined)\n        classes.push('btn--' + props.type); \n    \n    return (\n        <button className={classes.join(' ')} onClick={props.onButtonPress}>\n            {props.children}\n        </button>\n    );\n};\n\nexport default Button; ","// ***   Keypad.js   ***\n\nimport React from 'react'; \nimport KeypadRow from './KeypadRow'; \nimport Button from './Button';\n\nconst Keypad = (props) => (\n    <section className=\"keypad\">\n        <KeypadRow>\n            <Button type=\"primary\" onButtonPress={props.onButtonPress}>C</Button>\n            <Button type=\"primary\" onButtonPress={props.onButtonPress}>&larr;</Button>\n            <Button type=\"operator\" onButtonPress={props.onButtonPress}>%</Button>\n            <Button type=\"operator\" onButtonPress={props.onButtonPress}>/</Button>\n        </KeypadRow>\n        <KeypadRow>\n            <Button onButtonPress={props.onButtonPress}>1</Button>\n            <Button onButtonPress={props.onButtonPress}>2</Button>\n            <Button onButtonPress={props.onButtonPress}>3</Button>\n            <Button type=\"operator\" onButtonPress={props.onButtonPress}>*</Button>\n        </KeypadRow>\n        <KeypadRow>\n            <Button onButtonPress={props.onButtonPress}>4</Button>\n            <Button onButtonPress={props.onButtonPress}>5</Button>\n            <Button onButtonPress={props.onButtonPress}>6</Button>\n            <Button type=\"operator\" onButtonPress={props.onButtonPress}>+</Button>\n        </KeypadRow>\n        <KeypadRow>\n            <Button onButtonPress={props.onButtonPress}>7</Button>\n            <Button onButtonPress={props.onButtonPress}>8</Button>\n            <Button onButtonPress={props.onButtonPress}>9</Button>\n            <Button type=\"operator\" onButtonPress={props.onButtonPress}>-</Button>\n        </KeypadRow>\n        <KeypadRow>\n            <Button onButtonPress={props.onButtonPress}>0</Button>\n            <Button onButtonPress={props.onButtonPress}>.</Button>\n            <Button onButtonPress={props.onButtonPress} type='large'>=</Button>\n        </KeypadRow>\n        \n    </section>\n);\n\nexport default Keypad; ","// App.js\n\nimport React from 'react';\nimport './components/styles.css';\nimport Calculator from './components/Calculator';\n\nconst App = () => {\n  return (\n    <div className=\"app\">\n      <Calculator />\n    </div>\n)};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}